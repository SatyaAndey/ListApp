//
//  ListInteractor.swift
//  ListApp
//
//  Created by Satya on 06/11/20.
//  Copyright (c) 2020 Satya. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListBusinessLogic
{
    func fetchApiListitems(request: List.APIList.Request, isFromTestCase: Bool)
}

protocol ListDataStore
{
  //var name: String { get set }
}

class ListInteractor: ListBusinessLogic, ListDataStore
{
    var presenter: ListPresentationLogic?
    var worker: ListWorker?
    //var name: String = ""
    
    // MARK: Fetch Api list items
    
    func fetchApiListitems(request: List.APIList.Request, isFromTestCase: Bool) {
        if isFromTestCase {
            let response = List.APIList.Response()
            self.presenter?.presentWithListitemsApiResonse(response: response)
            return
        }
        worker = ListWorker()
        worker?.fetchListViewItems(request, completionhandler: { (response) in
            DispatchQueue.main.async {
                if let unWrappedResponse = response {
                    self.presenter?.presentWithListitemsApiResonse(response: unWrappedResponse)
                } else {
                    let response = List.APIList.Response()
                    self.presenter?.presentWithListitemsApiResonse(response: response)
                }
            }
        })
    }
    
}
