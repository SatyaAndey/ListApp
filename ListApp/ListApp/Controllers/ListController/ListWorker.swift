//
//  ListWorker.swift
//  ListApp
//
//  Created by Satya on 06/11/20.
//  Copyright (c) 2020 Satya. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import  Alamofire

class ListWorker
{
  func doSomeWork()
  {
  }
    func fetchListViewItems(_ request: List.APIList.Request, completionhandler: @escaping(_ response: List.APIList.Response?) -> Void) {
//        Utility.sharedInstance.indicatorStartAnimating()
        let request = try? URLRequest(url: URL(string: BASE_URL)!, method: .get)
        let task = URLSession(configuration: .default).dataTask(with: request!) { ( data, response , error) in
            do {
                if let stringResponse =  String(data: data!, encoding: .ascii)  {
                    let data = stringResponse.data(using: .utf8)
                    let dataModel =  try JSONDecoder().decode( List.APIList.Response.self, from: data!)
                    completionhandler(dataModel)
                } else {
                    completionhandler(nil)
                }
                Utility.sharedInstance.indicatorStopAnimating()
            } catch _ {
                completionhandler(nil)
                Utility.sharedInstance.indicatorStopAnimating()
            }
        }
         
         task.resume()
        
        /*
        
        Alamofire.request(BASE_URL, method: .get, parameters: nil,encoding: JSONEncoding, headers: nil).responseJSON {
        response in
          switch response.result {
                        case .success:
                            print(response)

                            break
                        case .failure(let error):

                            print(error)
                        }
        }*/
    }
}
